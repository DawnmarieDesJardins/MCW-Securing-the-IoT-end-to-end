{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"alias": {
            "defaultValue": null,
            "type": "String"
        },
		"username": {
            "defaultValue": "s2admin",
            "type": "String"
        },
		"password": {
            "defaultValue": "S2@dmins2@dmin",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
		{
            "type": "Microsoft.TimeSeriesInsights/environments",
            "apiVersion": "2018-08-15-preview",
            "name": "[concat('oilwells-timeseries-', parameters('alias'))]",
            "location": "eastus",
            "sku": {
                "name": "S1",
                "capacity": 1
            },
            "kind": "Standard",
            "properties": {
				"storageLimitExceededBehavior": "PurgeOldData",
				"dataRetentionTime": "P30D"
            }
        },
        {
            "type": "Microsoft.DataLakeStore/accounts",
            "apiVersion": "2016-11-01",
            "name": "[concat('oilwellsadls', parameters('alias'))]",
            "location": "eastus2",
            "properties": {}
        },
        {
            "type": "Microsoft.DataLakeAnalytics/accounts",
            "apiVersion": "2016-11-01",
            "name": "[concat('oilwellsdla', parameters('alias'))]",
            "location": "eastus2",
            "properties": {
                "defaultDataLakeStoreAccount": "[concat('oilwellsadls', parameters('alias'))]",
                "dataLakeStoreAccounts":   [
				  { "name": "[concat('oilwellsadls', parameters('alias'))]" }
				]
            },
			"dependsOn": [
                "[resourceId('Microsoft.DataLakeStore/accounts', concat('oilwellsadls', parameters('alias')))]"
            ]
        },
		{
            "type": "Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts",
            "apiVersion": "2016-11-01",
            "name": "[concat('oilwellsdla', parameters('alias'), '/', 'adls')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataLakeAnalytics/accounts', concat('oilwellsdla', parameters('alias')))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2018-04-01",
            "name": "[concat('oilwells-iothub-', parameters('alias'))]",
            "location": "centralus",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "operationsMonitoringProperties": {
                    "events": {
                        "None": "None",
                        "Connections": "None",
                        "DeviceTelemetry": "None",
                        "C2DCommands": "None",
                        "DeviceIdentityOperations": "None",
                        "FileUploadOperations": "None",
                        "Routes": "None"
                    }
                },
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4,
                        "partitionIds": [
                            "0",
                            "1",
                            "2",
                            "3"
                        ],
                        "path": "[concat('oilwells-iothub-', parameters('alias'))]",
                        "endpoint": "sb://iothub-ns-oilwells-c-1716786-f977e83dd2.servicebus.windows.net/"
                    },
                    "operationsMonitoringEvents": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4,
                        "partitionIds": [
                            "0",
                            "1",
                            "2",
                            "3"
                        ],
                        "path": "[concat('oilwells-iothub-', parameters('alias'), '-operationmonitoring')]",
                        "endpoint": "sb://iothub-ns-oilwells-c-1716786-f977e83dd2.servicebus.windows.net/"
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "",
                        "containerName": ""
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "Microsoft.Devices/provisioningServices",
            "apiVersion": "2017-11-15",
            "name": "[concat('oilwells-prov-', parameters('alias'))]",
            "location": "eastus",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "iotHubs": []
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2015-04-08",
            "name": "[concat('oilwells-cosmos-', parameters('alias'))]",
            "location": "Australia East",
            "tags": {
                "defaultExperience": "Core (SQL)"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": true,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "Australia East",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    },
                    {
                        "locationName": "Australia Southeast",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 1,
                        "isZoneRedundant": false
                    }
                ],
                "capabilities": []
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat('oilwells-eventsns-', parameters('alias'))]",
            "location": "West US",
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 1
            },
            "properties": {
                "zoneRedundant": false,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": false
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[concat('oilwells-vault-', parameters('alias'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "d280491c-b27a-41bf-9623-21b60cf430b3",
                "accessPolicies": [
                    {
                        "tenantId": "d280491c-b27a-41bf-9623-21b60cf430b3",
                        "objectId": "c1c8abcf-aa1f-443b-aa47-93df8879d9b2",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false
            }
        },
        {
            "type": "Microsoft.Maps/accounts",
            "apiVersion": "2018-05-01",
            "name": "[concat('oilwells-maps-', parameters('alias'))]",
            "location": "global",
            "sku": {
                "name": "s1",
                "tier": "Standard"
            },
            "properties": {
                "x-ms-client-id": "52a5c256-d95d-4dc9-9dac-3b1d5b6c4961"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[concat('oilwells-nsg-', parameters('alias'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "1573ade0-fb1a-4c2f-b7ce-3973c416a66a",
                "securityRules": [
                    {
                        "name": "Port_22",                        
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"da50df00-6173-4905-8c2f-2ba360408a9b\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[concat('oilwells-ip-', parameters('alias'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "9d0f4d3d-364c-4950-b969-dfd976fa5f9d",
                "ipAddress": "40.83.181.202",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-02-01",
            "name": "[concat('oilwells-vnet-', parameters('alias'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "2d158c43-a365-4e6d-81ed-ed0a8519e53a",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "delegations": []
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[concat('oilwells-logging-', parameters('alias'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[concat('oilwellsstorage', parameters('alias'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "apiVersion": "2016-03-01",
            "name": "[concat('oilwells-analytics-', parameters('alias'))]",
            "location": "West US",
            "properties": {
                "sku": {
                    "name": "Standard"
                },
                "eventsOutOfOrderPolicy": "Adjust",
                "outputErrorPolicy": "Stop",
                "eventsOutOfOrderMaxDelayInSeconds": 0,
                "eventsLateArrivalMaxDelayInSeconds": 5,
                "dataLocale": "en-US",
                "compatibilityLevel": "1.1"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[concat('oilwells-appsvc-', parameters('alias'))]",
            "location": "West US",
            "sku": {
                "name": "P1v2",
                "tier": "PremiumV2",
                "size": "P1v2",
                "family": "Pv2",
                "capacity": 1
            },
            "kind": "app",
            "properties": {
                "name": "[concat('oilwells-appsvc-', parameters('alias'))]",
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat('oilwells-eventsns-', parameters('alias'), '/RootManageSharedAccessKey')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', concat('oilwells-eventsns-', parameters('alias')))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-02-01",
			"name": "[concat('oilwells-vnet-', parameters('alias'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat('oilwells-vnet-', parameters('alias')))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.1.0.0/24",
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
			"name": "[concat('oilwells-edgevm-', parameters('alias'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-nic-', parameters('alias')))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', concat('oilwellsstorage', parameters('alias')))]"
            ],
            "plan": {
                "name": "ubuntu_1604_edgeruntimeonly",
                "product": "iot_edge_vm_ubuntu",
                "publisher": "microsoft_iot_edge"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1ms"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoft_iot_edge",
                        "offer": "iot_edge_vm_ubuntu",
                        "sku": "ubuntu_1604_edgeruntimeonly",
                        "version": "1.0.1"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat('oilwells-edgevm-', parameters('alias'), '_OsDisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"                            
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat('oilwells-edgevm-', parameters('alias'))]",
                    "adminUsername": "s2admin",
					"adminPassword": "S2@dmins2@dmin",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('oilwells-nic-', parameters('alias')))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', 'oilwellsstorage', parameters('alias'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-02-01",
			"name": "[concat('oilwells-nic-', parameters('alias'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-ip-', parameters('alias')))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "acf615e8-b7a3-488d-969b-ef3a03d91a13",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"76c8e567-7c3b-4dfe-a7ce-eb866fc981e3\"",
                        "properties": {
                            "privateIPAddress": "10.1.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('oilwells-ip-', parameters('alias')))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat('oilwells-vnet-', parameters('alias')), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "iogbkllfunwu3apn3ufikgpfhc.dx.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-35-E9-B3",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat('oilwells-nsg-', parameters('alias')))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        }
    ]
}